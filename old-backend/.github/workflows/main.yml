# This is a basic workflow to help you get started with Actions

name: Build and deploy to production

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/product-factory-backend:production

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: set up license files
        run: echo "${{ secrets.STAGING_LICENSE }}" > .license && echo "${{ secrets.STAGING_LICENSE_KEY }}" > .license_key.pub

      - name: Build and push static
        id: docker_build_static
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/Dockerfile.static
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/product-factory-backend-static:production

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: set up ssh key for auth
        run: echo "${{ secrets.PRODUCTION_UPDATER_SSH_KEY }}" > /tmp/ssh-key && chmod 600 /tmp/ssh-key
      - name: trigger deploy
        run: ssh -i /tmp/ssh-key -o "StrictHostKeyChecking=no" production-updater@vanhalen.openunited.com /home/production-updater/update-production.sh
      - name: remove ssh key
        run: rm -f /tmp/ssh-key
