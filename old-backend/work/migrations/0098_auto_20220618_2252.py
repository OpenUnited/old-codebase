# Generated by Django 3.1 on 2022-06-18 16:52

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('matching', '0015_auto_20220618_2252'),
        ('contribution_management', '0003_auto_20220618_2252'),
        ('talent', '0046_personpreferences'),
        ('comments', '0022_user_model'),
        ('work', '0097_auto_20211225_2230'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bounty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('points', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('short_description', models.TextField(max_length=256)),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Blocked'), (2, 'Available'), (3, 'Claimed'), (4, 'Done'), (5, 'In review')], default=0)),
                ('blocked', models.BooleanField(default=False)),
                ('featured', models.BooleanField(default=False)),
                ('priority', models.IntegerField(choices=[(0, 'High'), (1, 'Medium'), (2, 'Low')], default=1)),
                ('published_id', models.IntegerField(blank=True, default=0, editable=False)),
                ('auto_approve_task_claims', models.BooleanField(default=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('skill_mode', models.IntegerField(choices=[(0, 'Single Skill'), (1, 'Multiple Skills')], default=0)),
                ('reward_type', models.IntegerField(choices=[(0, 'Liquid Points'), (1, 'Non-liquid Points')], default=1)),
                ('attachment', models.ManyToManyField(blank=True, related_name='challenge_attachements', to='work.Attachment')),
                ('capability', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='work.capability')),
                ('comments_start', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='comments.challengecomment')),
                ('contribution_guide', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contribution_management.contributorguide')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to='talent.person')),
            ],
            options={
                'verbose_name_plural': 'Challenges',
            },
        ),
        migrations.CreateModel(
            name='ChallengeDepend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Challenge', to='work.challenge')),
                ('depends_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='work.challenge')),
            ],
            options={
                'db_table': 'work_challenge_depend',
            },
        ),
        migrations.CreateModel(
            name='ChallengeListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('short_description', models.TextField(max_length=256)),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Blocked'), (2, 'Available'), (3, 'Claimed'), (4, 'Done'), (5, 'In review')], default=0)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=254), size=None), size=None)),
                ('blocked', models.BooleanField(default=False)),
                ('featured', models.BooleanField(default=False)),
                ('priority', models.IntegerField(choices=[(0, 'High'), (1, 'Medium'), (2, 'Low')], default=1)),
                ('published_id', models.IntegerField(blank=True, default=0, editable=False)),
                ('auto_approve_task_claims', models.BooleanField(default=True)),
                ('created_by', models.JSONField()),
                ('updated_by', models.JSONField()),
                ('reviewer', models.JSONField(null=True)),
                ('product_data', models.JSONField(null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('task_claim', models.JSONField(null=True)),
                ('assigned_to_data', models.JSONField(null=True)),
                ('has_active_depends', models.BooleanField(default=False)),
                ('initiative_data', models.JSONField(null=True)),
                ('capability_data', models.JSONField(null=True)),
                ('in_review', models.BooleanField(default=False)),
                ('assigned_to_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='challenge_listing', to='talent.person')),
                ('capability', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='work.capability')),
                ('challenge', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='work.challenge')),
                ('initiative', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='work.initiative')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='work.product')),
                ('task_creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator', to='talent.person')),
            ],
        ),
        migrations.CreateModel(
            name='ProductChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='work.challenge')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='work.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RenameModel(
            old_name='TaskCategory',
            new_name='Skill',
        ),
        migrations.AddField(
            model_name='expertise',
            name='skill',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skill_expertise', to='work.skill'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='expertise',
            field=models.ManyToManyField(related_name='challenge_expertise', to='work.Expertise'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='initiative',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='work.initiative'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='work.product'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='reviewer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='talent.person'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='skill',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='challenge', to='work.skill'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='tag',
            field=models.ManyToManyField(blank=True, related_name='challenge_tags', to='work.Tag'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_by', to='talent.person'),
        ),
        migrations.AddField(
            model_name='bounty',
            name='challenge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='work.challenge'),
        ),
        migrations.AddField(
            model_name='bounty',
            name='expertise',
            field=models.ManyToManyField(related_name='bounty_expertise', to='work.Expertise'),
        ),
        migrations.AddField(
            model_name='bounty',
            name='skill',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bounty_skill', to='work.skill'),
        ),
    ]
