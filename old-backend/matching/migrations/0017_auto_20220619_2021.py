# Generated by Django 3.1 on 2022-06-19 14:21

from django.db import migrations


def import_existing_data(apps, schema_editor):
    Task = apps.get_model('work', 'Task')
    Bounty = apps.get_model('work', 'Bounty')
    Challenge = apps.get_model('work', 'Challenge')

    TaskClaim = apps.get_model('matching', 'TaskClaim')
    TaskDeliveryAttempt = apps.get_model('matching', 'TaskDeliveryAttempt')
    TaskDeliveryAttachment = apps.get_model('matching', 'TaskDeliveryAttachment')

    BountyClaim = apps.get_model('matching', 'BountyClaim')
    BountyDeliveryAttempt = apps.get_model('matching', 'BountyDeliveryAttempt')
    BountyDeliveryAttachment = apps.get_model('matching', 'BountyDeliveryAttachment')

    for tc in TaskClaim.objects.all():
        bc = BountyClaim()
        bc.id = tc.id
        bc.uuid = tc.uuid
        bc.kind = tc.kind
        bc.person = tc.person
        bounty_challenge = Challenge.objects.get(id=tc.task.id)
        bc.bounty = Bounty.objects.get(challenge=bounty_challenge)
        bc.save()
        bc.created_at = tc.created_at
        bc.save()

    for tda in TaskDeliveryAttempt.objects.all():
        bda = BountyDeliveryAttempt()
        bda.id = tda.id
        bda.kind = tda.kind
        bda.is_canceled = tda.is_canceled
        bda.delivery_message = tda.delivery_message
        bda.person = tda.person
        bda.bounty_claim = BountyClaim.objects.get(id=tda.task_claim.id)
        bda.save()
        bda.created_at = tda.created_at
        bda.save()

    for td_attachment in TaskDeliveryAttachment.objects.all():
        bd_attachment = BountyDeliveryAttachment()
        bd_attachment.id = td_attachment.id
        bd_attachment.file_type = td_attachment.file_type
        bd_attachment.name = td_attachment.name
        bd_attachment.path = td_attachment.path
        bd_attachment.bounty_delivery_attempt = BountyDeliveryAttempt.objects.get(id=td_attachment.task_delivery_attempt.id)
        bd_attachment.save()


def reverse_func(apps, schema_editor):
    BountyClaim = apps.get_model('matching', 'BountyClaim')
    BountyClaim.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('matching', '0016_auto_20220618_2252'),
        ('work', '0099_auto_20220619_2020'),
    ]

    operations = [
        migrations.RunPython(import_existing_data, reverse_func),
    ]
